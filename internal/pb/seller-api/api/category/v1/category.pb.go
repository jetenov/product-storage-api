// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.1
// source: gitlab.dg.ru/marketplace/go/seller-api/api/category/v1/category.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Language
type Language int32

const (
	Language_DEFAULT Language = 0
	Language_RU      Language = 1
	Language_EN      Language = 2
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0: "DEFAULT",
		1: "RU",
		2: "EN",
	}
	Language_value = map[string]int32{
		"DEFAULT": 0,
		"RU":      1,
		"EN":      2,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_enumTypes[0].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_enumTypes[0]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDescGZIP(), []int{0}
}

type GetCategoryAttributesRequest_AttributeType int32

const (
	GetCategoryAttributesRequest_ALL      GetCategoryAttributesRequest_AttributeType = 0
	GetCategoryAttributesRequest_REQUIRED GetCategoryAttributesRequest_AttributeType = 1
	GetCategoryAttributesRequest_OPTIONAL GetCategoryAttributesRequest_AttributeType = 2
)

// Enum value maps for GetCategoryAttributesRequest_AttributeType.
var (
	GetCategoryAttributesRequest_AttributeType_name = map[int32]string{
		0: "ALL",
		1: "REQUIRED",
		2: "OPTIONAL",
	}
	GetCategoryAttributesRequest_AttributeType_value = map[string]int32{
		"ALL":      0,
		"REQUIRED": 1,
		"OPTIONAL": 2,
	}
)

func (x GetCategoryAttributesRequest_AttributeType) Enum() *GetCategoryAttributesRequest_AttributeType {
	p := new(GetCategoryAttributesRequest_AttributeType)
	*p = x
	return p
}

func (x GetCategoryAttributesRequest_AttributeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetCategoryAttributesRequest_AttributeType) Descriptor() protoreflect.EnumDescriptor {
	return file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_enumTypes[1].Descriptor()
}

func (GetCategoryAttributesRequest_AttributeType) Type() protoreflect.EnumType {
	return &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_enumTypes[1]
}

func (x GetCategoryAttributesRequest_AttributeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetCategoryAttributesRequest_AttributeType.Descriptor instead.
func (GetCategoryAttributesRequest_AttributeType) EnumDescriptor() ([]byte, []int) {
	return file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDescGZIP(), []int{2, 0}
}

// GetCategoryTree
type GetCategoryTreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId int64    `protobuf:"varint,1,opt,name=category_id,proto3" json:"category_id,omitempty"`
	Language   Language `protobuf:"varint,2,opt,name=language,proto3,enum=category.v1.Language" json:"language,omitempty"`
}

func (x *GetCategoryTreeRequest) Reset() {
	*x = GetCategoryTreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryTreeRequest) ProtoMessage() {}

func (x *GetCategoryTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryTreeRequest.ProtoReflect.Descriptor instead.
func (*GetCategoryTreeRequest) Descriptor() ([]byte, []int) {
	return file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDescGZIP(), []int{0}
}

func (x *GetCategoryTreeRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GetCategoryTreeRequest) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_DEFAULT
}

type GetCategoryTreeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*GetCategoryTreeResponse_Item `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetCategoryTreeResponse) Reset() {
	*x = GetCategoryTreeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryTreeResponse) ProtoMessage() {}

func (x *GetCategoryTreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryTreeResponse.ProtoReflect.Descriptor instead.
func (*GetCategoryTreeResponse) Descriptor() ([]byte, []int) {
	return file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDescGZIP(), []int{1}
}

func (x *GetCategoryTreeResponse) GetResult() []*GetCategoryTreeResponse_Item {
	if x != nil {
		return x.Result
	}
	return nil
}

// GetCategoryAttributes
type GetCategoryAttributesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId    int64                                      `protobuf:"varint,1,opt,name=category_id,proto3" json:"category_id,omitempty"`
	AttributeType GetCategoryAttributesRequest_AttributeType `protobuf:"varint,2,opt,name=attribute_type,proto3,enum=category.v1.GetCategoryAttributesRequest_AttributeType" json:"attribute_type,omitempty"`
	Language      Language                                   `protobuf:"varint,3,opt,name=language,proto3,enum=category.v1.Language" json:"language,omitempty"`
}

func (x *GetCategoryAttributesRequest) Reset() {
	*x = GetCategoryAttributesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryAttributesRequest) ProtoMessage() {}

func (x *GetCategoryAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryAttributesRequest.ProtoReflect.Descriptor instead.
func (*GetCategoryAttributesRequest) Descriptor() ([]byte, []int) {
	return file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDescGZIP(), []int{2}
}

func (x *GetCategoryAttributesRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GetCategoryAttributesRequest) GetAttributeType() GetCategoryAttributesRequest_AttributeType {
	if x != nil {
		return x.AttributeType
	}
	return GetCategoryAttributesRequest_ALL
}

func (x *GetCategoryAttributesRequest) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_DEFAULT
}

type GetCategoryAttributesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*GetCategoryAttributesResponse_Attribute `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetCategoryAttributesResponse) Reset() {
	*x = GetCategoryAttributesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryAttributesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryAttributesResponse) ProtoMessage() {}

func (x *GetCategoryAttributesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryAttributesResponse.ProtoReflect.Descriptor instead.
func (*GetCategoryAttributesResponse) Descriptor() ([]byte, []int) {
	return file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDescGZIP(), []int{3}
}

func (x *GetCategoryAttributesResponse) GetResult() []*GetCategoryAttributesResponse_Attribute {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetCategoryTreeResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId int64                           `protobuf:"varint,1,opt,name=category_id,proto3" json:"category_id,omitempty"`
	Title      string                          `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Children   []*GetCategoryTreeResponse_Item `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *GetCategoryTreeResponse_Item) Reset() {
	*x = GetCategoryTreeResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryTreeResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryTreeResponse_Item) ProtoMessage() {}

func (x *GetCategoryTreeResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryTreeResponse_Item.ProtoReflect.Descriptor instead.
func (*GetCategoryTreeResponse_Item) Descriptor() ([]byte, []int) {
	return file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetCategoryTreeResponse_Item) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GetCategoryTreeResponse_Item) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetCategoryTreeResponse_Item) GetChildren() []*GetCategoryTreeResponse_Item {
	if x != nil {
		return x.Children
	}
	return nil
}

type GetCategoryAttributesResponse_Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                                             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                                            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description  string                                            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type         string                                            `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	IsCollection bool                                              `protobuf:"varint,5,opt,name=is_collection,proto3" json:"is_collection,omitempty"`
	IsRequired   bool                                              `protobuf:"varint,6,opt,name=is_required,proto3" json:"is_required,omitempty"`
	Option       []*GetCategoryAttributesResponse_Attribute_Option `protobuf:"bytes,7,rep,name=option,proto3" json:"option,omitempty"`
	Child        []*GetCategoryAttributesResponse_Attribute_Child  `protobuf:"bytes,8,rep,name=child,proto3" json:"child,omitempty"`
}

func (x *GetCategoryAttributesResponse_Attribute) Reset() {
	*x = GetCategoryAttributesResponse_Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryAttributesResponse_Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryAttributesResponse_Attribute) ProtoMessage() {}

func (x *GetCategoryAttributesResponse_Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryAttributesResponse_Attribute.ProtoReflect.Descriptor instead.
func (*GetCategoryAttributesResponse_Attribute) Descriptor() ([]byte, []int) {
	return file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetCategoryAttributesResponse_Attribute) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCategoryAttributesResponse_Attribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCategoryAttributesResponse_Attribute) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetCategoryAttributesResponse_Attribute) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetCategoryAttributesResponse_Attribute) GetIsCollection() bool {
	if x != nil {
		return x.IsCollection
	}
	return false
}

func (x *GetCategoryAttributesResponse_Attribute) GetIsRequired() bool {
	if x != nil {
		return x.IsRequired
	}
	return false
}

func (x *GetCategoryAttributesResponse_Attribute) GetOption() []*GetCategoryAttributesResponse_Attribute_Option {
	if x != nil {
		return x.Option
	}
	return nil
}

func (x *GetCategoryAttributesResponse_Attribute) GetChild() []*GetCategoryAttributesResponse_Attribute_Child {
	if x != nil {
		return x.Child
	}
	return nil
}

type GetCategoryAttributesResponse_Attribute_Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetCategoryAttributesResponse_Attribute_Option) Reset() {
	*x = GetCategoryAttributesResponse_Attribute_Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryAttributesResponse_Attribute_Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryAttributesResponse_Attribute_Option) ProtoMessage() {}

func (x *GetCategoryAttributesResponse_Attribute_Option) ProtoReflect() protoreflect.Message {
	mi := &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryAttributesResponse_Attribute_Option.ProtoReflect.Descriptor instead.
func (*GetCategoryAttributesResponse_Attribute_Option) Descriptor() ([]byte, []int) {
	return file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *GetCategoryAttributesResponse_Attribute_Option) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCategoryAttributesResponse_Attribute_Option) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetCategoryAttributesResponse_Attribute_Child struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                                             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                                            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description  string                                            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type         string                                            `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	IsCollection bool                                              `protobuf:"varint,5,opt,name=is_collection,proto3" json:"is_collection,omitempty"`
	IsRequired   bool                                              `protobuf:"varint,6,opt,name=is_required,proto3" json:"is_required,omitempty"`
	Option       []*GetCategoryAttributesResponse_Attribute_Option `protobuf:"bytes,7,rep,name=option,proto3" json:"option,omitempty"`
}

func (x *GetCategoryAttributesResponse_Attribute_Child) Reset() {
	*x = GetCategoryAttributesResponse_Attribute_Child{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryAttributesResponse_Attribute_Child) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryAttributesResponse_Attribute_Child) ProtoMessage() {}

func (x *GetCategoryAttributesResponse_Attribute_Child) ProtoReflect() protoreflect.Message {
	mi := &file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryAttributesResponse_Attribute_Child.ProtoReflect.Descriptor instead.
func (*GetCategoryAttributesResponse_Attribute_Child) Descriptor() ([]byte, []int) {
	return file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDescGZIP(), []int{3, 0, 1}
}

func (x *GetCategoryAttributesResponse_Attribute_Child) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCategoryAttributesResponse_Attribute_Child) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCategoryAttributesResponse_Attribute_Child) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetCategoryAttributesResponse_Attribute_Child) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetCategoryAttributesResponse_Attribute_Child) GetIsCollection() bool {
	if x != nil {
		return x.IsCollection
	}
	return false
}

func (x *GetCategoryAttributesResponse_Attribute_Child) GetIsRequired() bool {
	if x != nil {
		return x.IsRequired
	}
	return false
}

func (x *GetCategoryAttributesResponse_Attribute_Child) GetOption() []*GetCategoryAttributesResponse_Attribute_Option {
	if x != nil {
		return x.Option
	}
	return nil
}

var File_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto protoreflect.FileDescriptor

var file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDesc = []byte{
	0x0a, 0x47, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x72, 0x75,
	0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2f, 0x67, 0x6f, 0x2f,
	0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x76, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x1a, 0x85, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x93, 0x02, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x0b, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x5f, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x37, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x34, 0x0a, 0x0d,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c,
	0x10, 0x02, 0x22, 0xf5, 0x05, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x1a, 0x85, 0x05, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73,
	0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x12, 0x53, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x1a, 0x2e, 0x0a, 0x06, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xfe, 0x01, 0x0a, 0x05, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x27, 0x0a, 0x08, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c,
	0x54, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x52, 0x55, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x45,
	0x4e, 0x10, 0x02, 0x32, 0xd7, 0x01, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x41, 0x50, 0x49, 0x12, 0xc7, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x69, 0x92, 0x41, 0x0e, 0x1a, 0x0a, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x58, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x52, 0x22, 0x11, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x3a, 0x01,
	0x2a, 0x5a, 0x23, 0x12, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x2f, 0x7b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x5a, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x42, 0x3e, 0x5a,
	0x3c, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x72, 0x75, 0x2f,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2f, 0x67, 0x6f, 0x2f, 0x73,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDescOnce sync.Once
	file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDescData = file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDesc
)

func file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDescGZIP() []byte {
	file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDescOnce.Do(func() {
		file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDescData = protoimpl.X.CompressGZIP(file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDescData)
	})
	return file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDescData
}

var file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_goTypes = []interface{}{
	(Language)(0), // 0: category.v1.Language
	(GetCategoryAttributesRequest_AttributeType)(0),        // 1: category.v1.GetCategoryAttributesRequest.AttributeType
	(*GetCategoryTreeRequest)(nil),                         // 2: category.v1.GetCategoryTreeRequest
	(*GetCategoryTreeResponse)(nil),                        // 3: category.v1.GetCategoryTreeResponse
	(*GetCategoryAttributesRequest)(nil),                   // 4: category.v1.GetCategoryAttributesRequest
	(*GetCategoryAttributesResponse)(nil),                  // 5: category.v1.GetCategoryAttributesResponse
	(*GetCategoryTreeResponse_Item)(nil),                   // 6: category.v1.GetCategoryTreeResponse.Item
	(*GetCategoryAttributesResponse_Attribute)(nil),        // 7: category.v1.GetCategoryAttributesResponse.Attribute
	(*GetCategoryAttributesResponse_Attribute_Option)(nil), // 8: category.v1.GetCategoryAttributesResponse.Attribute.Option
	(*GetCategoryAttributesResponse_Attribute_Child)(nil),  // 9: category.v1.GetCategoryAttributesResponse.Attribute.Child
}
var file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_depIdxs = []int32{
	0,  // 0: category.v1.GetCategoryTreeRequest.language:type_name -> category.v1.Language
	6,  // 1: category.v1.GetCategoryTreeResponse.result:type_name -> category.v1.GetCategoryTreeResponse.Item
	1,  // 2: category.v1.GetCategoryAttributesRequest.attribute_type:type_name -> category.v1.GetCategoryAttributesRequest.AttributeType
	0,  // 3: category.v1.GetCategoryAttributesRequest.language:type_name -> category.v1.Language
	7,  // 4: category.v1.GetCategoryAttributesResponse.result:type_name -> category.v1.GetCategoryAttributesResponse.Attribute
	6,  // 5: category.v1.GetCategoryTreeResponse.Item.children:type_name -> category.v1.GetCategoryTreeResponse.Item
	8,  // 6: category.v1.GetCategoryAttributesResponse.Attribute.option:type_name -> category.v1.GetCategoryAttributesResponse.Attribute.Option
	9,  // 7: category.v1.GetCategoryAttributesResponse.Attribute.child:type_name -> category.v1.GetCategoryAttributesResponse.Attribute.Child
	8,  // 8: category.v1.GetCategoryAttributesResponse.Attribute.Child.option:type_name -> category.v1.GetCategoryAttributesResponse.Attribute.Option
	2,  // 9: category.v1.CategoryAPI.GetCategoryTree:input_type -> category.v1.GetCategoryTreeRequest
	3,  // 10: category.v1.CategoryAPI.GetCategoryTree:output_type -> category.v1.GetCategoryTreeResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_init() }
func file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_init() {
	if File_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryTreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryTreeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryAttributesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryAttributesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryTreeResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryAttributesResponse_Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryAttributesResponse_Attribute_Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryAttributesResponse_Attribute_Child); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_goTypes,
		DependencyIndexes: file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_depIdxs,
		EnumInfos:         file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_enumTypes,
		MessageInfos:      file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_msgTypes,
	}.Build()
	File_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto = out.File
	file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_rawDesc = nil
	file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_goTypes = nil
	file_gitlab_dg_ru_marketplace_go_seller_api_api_category_v1_category_proto_depIdxs = nil
}
