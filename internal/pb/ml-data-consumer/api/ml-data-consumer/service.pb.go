// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.1
// source: gitlab.dg.ru/ocb/product-creation/ml-data-consumer/api/ml-data-consumer/service.proto

package competitor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ComplexId int64              `protobuf:"varint,3,opt,name=complex_id,json=complexId,proto3" json:"complex_id,omitempty"`
	Values    []*Attribute_Value `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_rawDescGZIP(), []int{0}
}

func (x *Attribute) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Attribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attribute) GetComplexId() int64 {
	if x != nil {
		return x.ComplexId
	}
	return 0
}

func (x *Attribute) GetValues() []*Attribute_Value {
	if x != nil {
		return x.Values
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url     string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	CephUrl string `protobuf:"bytes,2,opt,name=ceph_url,json=cephUrl,proto3" json:"ceph_url,omitempty"`
	IsMain  bool   `protobuf:"varint,3,opt,name=is_main,json=isMain,proto3" json:"is_main,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_rawDescGZIP(), []int{1}
}

func (x *Image) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Image) GetCephUrl() string {
	if x != nil {
		return x.CephUrl
	}
	return ""
}

func (x *Image) GetIsMain() bool {
	if x != nil {
		return x.IsMain
	}
	return false
}

type CompetitorProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Attributes            []*Attribute      `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Name                  string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description           string            `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Images                []*Image          `protobuf:"bytes,5,rep,name=images,proto3" json:"images,omitempty"`
	Depth                 int64             `protobuf:"varint,6,opt,name=depth,proto3" json:"depth,omitempty"`
	Weight                int64             `protobuf:"varint,7,opt,name=weight,proto3" json:"weight,omitempty"`
	Height                int64             `protobuf:"varint,8,opt,name=height,proto3" json:"height,omitempty"`
	Width                 int64             `protobuf:"varint,9,opt,name=width,proto3" json:"width,omitempty"`
	CommercialCategoryId  int64             `protobuf:"varint,10,opt,name=commercial_category_id,json=commercialCategoryId,proto3" json:"commercial_category_id,omitempty"`
	DescriptionCategoryId int64             `protobuf:"varint,11,opt,name=description_category_id,json=descriptionCategoryId,proto3" json:"description_category_id,omitempty"`
	CommercialTypeId      int64             `protobuf:"varint,12,opt,name=commercial_type_id,json=commercialTypeId,proto3" json:"commercial_type_id,omitempty"`
	Url                   string            `protobuf:"bytes,13,opt,name=url,proto3" json:"url,omitempty"`
	ProductId             string            `protobuf:"bytes,14,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	CompetitorName        string            `protobuf:"bytes,15,opt,name=competitor_name,json=competitorName,proto3" json:"competitor_name,omitempty"`
	RawData               map[string]string `protobuf:"bytes,16,rep,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Price                 int64             `protobuf:"varint,17,opt,name=price,proto3" json:"price,omitempty"`
	PricePromo            int64             `protobuf:"varint,18,opt,name=price_promo,json=pricePromo,proto3" json:"price_promo,omitempty"`
}

func (x *CompetitorProduct) Reset() {
	*x = CompetitorProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompetitorProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompetitorProduct) ProtoMessage() {}

func (x *CompetitorProduct) ProtoReflect() protoreflect.Message {
	mi := &file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompetitorProduct.ProtoReflect.Descriptor instead.
func (*CompetitorProduct) Descriptor() ([]byte, []int) {
	return file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_rawDescGZIP(), []int{2}
}

func (x *CompetitorProduct) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CompetitorProduct) GetAttributes() []*Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *CompetitorProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CompetitorProduct) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CompetitorProduct) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *CompetitorProduct) GetDepth() int64 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *CompetitorProduct) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *CompetitorProduct) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CompetitorProduct) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *CompetitorProduct) GetCommercialCategoryId() int64 {
	if x != nil {
		return x.CommercialCategoryId
	}
	return 0
}

func (x *CompetitorProduct) GetDescriptionCategoryId() int64 {
	if x != nil {
		return x.DescriptionCategoryId
	}
	return 0
}

func (x *CompetitorProduct) GetCommercialTypeId() int64 {
	if x != nil {
		return x.CommercialTypeId
	}
	return 0
}

func (x *CompetitorProduct) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CompetitorProduct) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *CompetitorProduct) GetCompetitorName() string {
	if x != nil {
		return x.CompetitorName
	}
	return ""
}

func (x *CompetitorProduct) GetRawData() map[string]string {
	if x != nil {
		return x.RawData
	}
	return nil
}

func (x *CompetitorProduct) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CompetitorProduct) GetPricePromo() int64 {
	if x != nil {
		return x.PricePromo
	}
	return 0
}

type GetCompetitorProductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanonicalIds []string `protobuf:"bytes,1,rep,name=canonical_ids,json=canonicalIds,proto3" json:"canonical_ids,omitempty"`
}

func (x *GetCompetitorProductsRequest) Reset() {
	*x = GetCompetitorProductsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompetitorProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompetitorProductsRequest) ProtoMessage() {}

func (x *GetCompetitorProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompetitorProductsRequest.ProtoReflect.Descriptor instead.
func (*GetCompetitorProductsRequest) Descriptor() ([]byte, []int) {
	return file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetCompetitorProductsRequest) GetCanonicalIds() []string {
	if x != nil {
		return x.CanonicalIds
	}
	return nil
}

type GetCompetitorProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompetitorProducts []*CompetitorProduct `protobuf:"bytes,1,rep,name=competitor_products,json=competitorProducts,proto3" json:"competitor_products,omitempty"`
}

func (x *GetCompetitorProductsResponse) Reset() {
	*x = GetCompetitorProductsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompetitorProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompetitorProductsResponse) ProtoMessage() {}

func (x *GetCompetitorProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompetitorProductsResponse.ProtoReflect.Descriptor instead.
func (*GetCompetitorProductsResponse) Descriptor() ([]byte, []int) {
	return file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetCompetitorProductsResponse) GetCompetitorProducts() []*CompetitorProduct {
	if x != nil {
		return x.CompetitorProducts
	}
	return nil
}

type Attribute_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Attribute_Value) Reset() {
	*x = Attribute_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribute_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute_Value) ProtoMessage() {}

func (x *Attribute_Value) ProtoReflect() protoreflect.Message {
	mi := &file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute_Value.ProtoReflect.Descriptor instead.
func (*Attribute_Value) Descriptor() ([]byte, []int) {
	return file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Attribute_Value) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Attribute_Value) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto protoreflect.FileDescriptor

var file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_rawDesc = []byte{
	0x0a, 0x57, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x72, 0x75,
	0x2f, 0x6f, 0x63, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2d, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x6c, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6c, 0x2d, 0x64, 0x61,
	0x74, 0x61, 0x2d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x39, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e,
	0x6f, 0x63, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74,
	0x69, 0x74, 0x6f, 0x72, 0x22, 0xe1, 0x01, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x49, 0x64, 0x12, 0x62, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x6f, 0x63, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x6d, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x6f,
	0x72, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x2d, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x65, 0x70, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x65, 0x70, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6e, 0x22, 0xd4, 0x06, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70,
	0x65, 0x74, 0x69, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x64, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x44, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x6f, 0x63, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x6c,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x06, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e,
	0x2e, 0x6f, 0x63, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x34, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a,
	0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x72, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x6f,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x74, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x6f,
	0x63, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69,
	0x74, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x6f, 0x72, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x52, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x1a, 0x3a, 0x0a, 0x0c, 0x52, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x43,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c,
	0x49, 0x64, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69,
	0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x6f, 0x63, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d,
	0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x32, 0xde, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69,
	0x74, 0x6f, 0x72, 0x41, 0x50, 0x49, 0x12, 0xcc, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x12, 0x57, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x6f, 0x63, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x6c, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x58, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e,
	0x2e, 0x6f, 0x63, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69,
	0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x72, 0x75, 0x2f, 0x6f, 0x63, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x6c, 0x2d,
	0x64, 0x61, 0x74, 0x61, 0x2d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_rawDescOnce sync.Once
	file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_rawDescData = file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_rawDesc
)

func file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_rawDescGZIP() []byte {
	file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_rawDescOnce.Do(func() {
		file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_rawDescData)
	})
	return file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_rawDescData
}

var file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_goTypes = []interface{}{
	(*Attribute)(nil),                     // 0: dg.ocb.product_creation.ml_data_consumer.pkg.competitor.Attribute
	(*Image)(nil),                         // 1: dg.ocb.product_creation.ml_data_consumer.pkg.competitor.Image
	(*CompetitorProduct)(nil),             // 2: dg.ocb.product_creation.ml_data_consumer.pkg.competitor.CompetitorProduct
	(*GetCompetitorProductsRequest)(nil),  // 3: dg.ocb.product_creation.ml_data_consumer.pkg.competitor.GetCompetitorProductsRequest
	(*GetCompetitorProductsResponse)(nil), // 4: dg.ocb.product_creation.ml_data_consumer.pkg.competitor.GetCompetitorProductsResponse
	(*Attribute_Value)(nil),               // 5: dg.ocb.product_creation.ml_data_consumer.pkg.competitor.Attribute.Value
	nil,                                   // 6: dg.ocb.product_creation.ml_data_consumer.pkg.competitor.CompetitorProduct.RawDataEntry
}
var file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_depIdxs = []int32{
	5, // 0: dg.ocb.product_creation.ml_data_consumer.pkg.competitor.Attribute.values:type_name -> dg.ocb.product_creation.ml_data_consumer.pkg.competitor.Attribute.Value
	0, // 1: dg.ocb.product_creation.ml_data_consumer.pkg.competitor.CompetitorProduct.attributes:type_name -> dg.ocb.product_creation.ml_data_consumer.pkg.competitor.Attribute
	1, // 2: dg.ocb.product_creation.ml_data_consumer.pkg.competitor.CompetitorProduct.images:type_name -> dg.ocb.product_creation.ml_data_consumer.pkg.competitor.Image
	6, // 3: dg.ocb.product_creation.ml_data_consumer.pkg.competitor.CompetitorProduct.raw_data:type_name -> dg.ocb.product_creation.ml_data_consumer.pkg.competitor.CompetitorProduct.RawDataEntry
	2, // 4: dg.ocb.product_creation.ml_data_consumer.pkg.competitor.GetCompetitorProductsResponse.competitor_products:type_name -> dg.ocb.product_creation.ml_data_consumer.pkg.competitor.CompetitorProduct
	3, // 5: dg.ocb.product_creation.ml_data_consumer.pkg.competitor.CompetitorAPI.GetCompetitorProducts:input_type -> dg.ocb.product_creation.ml_data_consumer.pkg.competitor.GetCompetitorProductsRequest
	4, // 6: dg.ocb.product_creation.ml_data_consumer.pkg.competitor.CompetitorAPI.GetCompetitorProducts:output_type -> dg.ocb.product_creation.ml_data_consumer.pkg.competitor.GetCompetitorProductsResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() {
	file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_init()
}
func file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_init() {
	if File_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompetitorProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompetitorProductsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompetitorProductsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribute_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_goTypes,
		DependencyIndexes: file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_depIdxs,
		MessageInfos:      file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_msgTypes,
	}.Build()
	File_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto = out.File
	file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_rawDesc = nil
	file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_goTypes = nil
	file_gitlab_dg_ru_ocb_product_creation_ml_data_consumer_api_ml_data_consumer_service_proto_depIdxs = nil
}
